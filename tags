!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/mshariar/get_next_line/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
BUFFER_SIZE	get_next_line.h	/^#  define BUFFER_SIZE /;"	d
GET_NEXT_LINE_H	get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
buffer	get_next_line.h	/^	char			buffer[BUFFER_SIZE];$/;"	m	struct:s_list	typeref:typename:char[]
content	get_next_line.h	/^	char			*content;$/;"	m	struct:s_list	typeref:typename:char *
copy_lines	get_next_line_utils.c	/^void	copy_lines(t_list *list, char *str)$/;"	f	typeref:typename:void
create_list	get_next_line.c	/^void	create_list(t_list **list, int fd)$/;"	f	typeref:typename:void
find_newline	get_next_line_utils.c	/^int	find_newline(t_list *list)$/;"	f	typeref:typename:int
free_malloc	get_next_line_utils.c	/^void	free_malloc(t_list **list, t_list *newnode, char *buff)$/;"	f	typeref:typename:void
get_len	get_next_line_utils.c	/^int	get_len(t_list *list)$/;"	f	typeref:typename:int
get_next_line	get_next_line.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
list_clear	get_next_line.c	/^void	list_clear(t_list **list)$/;"	f	typeref:typename:void
list_last	get_next_line_utils.c	/^t_list	*list_last(t_list *list)$/;"	f	typeref:typename:t_list *
main	main.c	/^int main()$/;"	f	typeref:typename:int
next	get_next_line.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list *
nxt_line	get_next_line.c	/^char	*nxt_line(t_list *list)$/;"	f	typeref:typename:char *
s_list	get_next_line.h	/^typedef struct s_list$/;"	s
t_list	get_next_line.h	/^}		t_list;$/;"	t	typeref:struct:s_list
write_line	get_next_line.c	/^void	write_line(t_list **list, char *buff)$/;"	f	typeref:typename:void
